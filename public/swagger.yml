# TODO: describe 500 error (render :errors)

swagger: '2.0'
info:
  version: 1.0.0
  title: Shop API
host: localhost:3000
basePath: /
schemes:
  - http
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /categories:
    get:
      description: Get list of categories
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Authorization Token
          type: string
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        401:
          description: Unauthorized
  /orders:
    post:
      description: Create new order
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Authorization Token
          type: string
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        401:
          description: Unauthorized
  /products:
    get:
      description: Get list of products
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Authorization Token
          type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Product'
        401:
          description: Unauthorized
  /purchases:
    post:
      description: Add new purchase to order
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Authorization Token
          type: string
        - name: purchase
          in: body
          required: true
          schema:
            type: object
            required:
              - purchase
            properties:
              purchase:
                type: object
                required:
                  - amount
                  - product_id
                properties:
                  amount:
                    type: integer
                    example: 1
                  product_id:
                    type: integer
                    example: 1
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Purchase'
        400:
          description: Bad request
        404:
          description: Product not found
        401:
          description: Unauthorized
  /purchases/{id}:
    patch:
      description: Edit purchase
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Authorization Token
          type: string
        - name: purchase
          in: body
          required: true
          schema:
            type: object
            required:
              - purchase
            properties:
              purchase:
                type: object
                properties:
                  amount:
                    type: integer
                    example: 1
                  product_id:
                    type: integer
                    example: 1
        - name: id
          in: path
          type: string
          required: true
      responses:
        204:
          description: Ok
        404:
          description: Purchase not found
        401:
          description: Unauthorized
        400:
          description: Bad request
    delete:
      description: Delete purchase
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Authorization Token
          type: string
        - name: id
          in: path
          type: string
          required: true
      responses:
        204:
          description: Ok
        404:
          description: Purchase not found
        401:
          description: Unauthorized
  /session:
    post:
      description: Sign in
      parameters:
        - name: session
          in: body
          required: true
          schema:
            type: object
            required:
              - session
            properties:
              session:
                type: object
                required:
                  - email
                  - password
                properties:
                  email:
                    type: string
                    example: test@example.com
                  password:
                    type: integer
                    example: password
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              auth_token:
                type: string
                example: 0371354c-6d6b-4e0a-be32-a0791f0f569d
    delete:
      description: Sign out
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Authorization Token
          type: string
      responses:
        204:
          description: Ok
        401:
          description: Unauthorized
  /version:
    get:
      description: Get app versions
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Version'
definitions:
  Category:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Meat
      created_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      updated_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      image_file_name:
        type: string
        example: 16.jpg
      image_content_type:
        type: string
        example: image/jpeg
      image_file_size:
        type: integer
        example: 1571808
      image_updated_at:
        type: string
        example: '2017-08-21T10:35:43.482Z'
  Order:
    type: object
    properties:
      id:
        type: integer
        example: 1
      aasm_state:
        type: string
        example: created
      created_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      updated_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      user_id:
        type: integer
        example: 1
      purchases_count:
        type: integer
        example: 1
      total:
        type: integer
        example: 1
  Purchase:
    type: object
    properties:
      id:
        type: integer
        example: 1
      user_id:
        type: integer
        example: 1
      product_id:
        type: integer
        example: 1
      amount:
        type: integer
        example: 1
      price:
        type: string
        example: '2.12'
      created_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      updated_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      order_id:
        type: integer
        example: 1
  Similarity:
    type: object
    properties:
      amount:
        type: integer
        example: 1
      product_id:
        type: integer
        example: 1
  Product:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Aerodynamic Aluminum Computer
      created_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      updated_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      deleted_at:
        type: string
        example: '2017-08-18T12:17:43.933Z'
      image_file_name:
        type: string
        example: 16.jpg
      image_content_type:
        type: string
        example: image/jpeg
      image_file_size:
        type: integer
        example: 1571808
      image_updated_at:
        type: string
        example: '2017-08-21T10:35:43.482Z'
      description:
        type: string
        example: The SQL alarm is down, hack the 1080p protocol so we can generate the SMS port!
      description_tsvector:
        type: string
        example: "'1080p':8 'alarm':3 'generat':13 'hack':6 'port':16 'protocol':9 'sms':15 'sql':2"
      similarities:
        type: array
        items:
          $ref: '#/definitions/Similarity'
  PlatformVersion:
    type: object
    properties:
      minimal_recomended:
        type: string
        example: '0.0.0'
      minimal_compatible:
        type: string
        example: '0.0.0'
      blocked:
        type: array
        items:
          type: string
  Version:
    type: object
    properties:
      ios:
        $ref: '#/definitions/PlatformVersion'
      android:
        $ref: '#/definitions/PlatformVersion'
